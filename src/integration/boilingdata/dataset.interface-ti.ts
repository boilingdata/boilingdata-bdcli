/**
 * This module was automatically generated by `ts-interface-builder`
 */
import * as t from "ts-interface-checker";
// tslint:disable:object-literal-key-quotes

export const EDataSetType = t.enumtype({
  "S3": "s3",
});

export const USessionType = t.union(t.lit("sts"), t.lit("assumeRole"));

export const UGrant = t.union(t.lit("read"), t.lit("write"));

export const ULayout = t.union(t.lit("hive"), t.lit("folder"), t.lit("file"));

export const UFileType = t.union(t.lit("parquet"), t.lit("json"), t.lit("csv"));

export const IStatement = t.iface([], {
  "id": "string",
  "urlPrefix": "string",
  "permissions": t.opt(t.array("UGrant")),
});

export const IStatementExt = t.iface(["IStatement"], {
  "bucket": "string",
  "prefix": "string",
});

export const IDataSet = t.iface([], {
  "name": "string",
  "urlPrefix": "string",
  "layout": t.opt("ULayout"),
  "filetype": t.opt("UFileType"),
});

export const IDataSource = t.iface([], {
  "name": "string",
  "type": "EDataSetType",
  "accessPolicy": t.array("IStatement"),
  "dataSets": t.array("IDataSet"),
  "sessionType": t.opt("USessionType"),
});

export const IDataSources = t.iface([], {
  "version": t.opt(t.union("string", "number")),
  "uniqNamePart": "string",
  "dataSources": t.array("IDataSource"),
});

const exportedTypeSuite: t.ITypeSuite = {
  EDataSetType,
  USessionType,
  UGrant,
  ULayout,
  UFileType,
  IStatement,
  IStatementExt,
  IDataSet,
  IDataSource,
  IDataSources,
};
export default exportedTypeSuite;
