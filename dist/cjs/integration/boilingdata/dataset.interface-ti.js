"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.IDataSources = exports.IDataSource = exports.IDataSet = exports.IStatementExt = exports.IStatement = exports.UGrant = exports.FILE_TYPE = exports.GRANT_PERMISSION = void 0;
/**
 * This module was automatically generated by `ts-interface-builder`
 */
const t = __importStar(require("ts-interface-checker"));
// tslint:disable:object-literal-key-quotes
exports.GRANT_PERMISSION = t.enumtype({
    "G_WRITE": "write",
    "G_READ": "read",
});
exports.FILE_TYPE = t.enumtype({
    "PARQUET": "parquet",
    "JSON": "json",
    "CSV": "csv",
});
exports.UGrant = t.union(t.enumlit("GRANT_PERMISSION", "G_READ"), t.enumlit("GRANT_PERMISSION", "G_WRITE"));
exports.IStatement = t.iface([], {
    "urlPrefix": "string",
    "accessRights": t.opt(t.array("UGrant")),
});
exports.IStatementExt = t.iface(["IStatement"], {
    "bucket": "string",
    "prefix": "string",
});
exports.IDataSet = t.iface([], {
    "name": "string",
    "urlPrefix": "string",
});
exports.IDataSource = t.iface([], {
    "name": "string",
    "permissions": t.array("IStatement"),
});
exports.IDataSources = t.iface([], {
    "version": t.opt(t.union("string", "number")),
    "uniqNamePart": t.opt("string"),
    "dataSources": t.array("IDataSource"),
});
const exportedTypeSuite = {
    GRANT_PERMISSION: exports.GRANT_PERMISSION,
    FILE_TYPE: exports.FILE_TYPE,
    UGrant: exports.UGrant,
    IStatement: exports.IStatement,
    IStatementExt: exports.IStatementExt,
    IDataSet: exports.IDataSet,
    IDataSource: exports.IDataSource,
    IDataSources: exports.IDataSources,
};
exports.default = exportedTypeSuite;
